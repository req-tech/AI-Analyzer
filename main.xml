<?xml version="1.0" encoding="UTF-8" ?>
<Module specificationVersion="1.3">
<ModulePrefs title="Hello World v1.0" height="130" scrolling="true">
	<Require feature="com.ibm.rdm.rm.api"/>
	<Require feature="dynamic-height"/>
</ModulePrefs>

<Content type="html">
	<![CDATA[
		<html>
			<head>
				<!-- Language settings -->
				<meta charset="utf-8">
				<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />	
				<script type="text/javascript" src="lang_en.js" charset="utf-8"></script>		
				<script>	
				lang_json = `{
					  "strings": [
					    {
					      "id": "str001",
					      "text": "Show instructions"
					    },
					    {
					      "id": "str002",
					      "text": "Change settings"
					    },
					    {
					      "id": "str003",
					      "text": "How to use this widget?"
					    },
					    {
					      "id": "str004",
					      "text": "This widget is designed to be a template for new Celeris widgets. It contains most of the basic code you might need to develop a widget. Follow the instructions below to use this widget with ease and confidence."
					    },
					    {
					      "id": "str005",
					      "text": "Open the module."
					    },
					    {
					      "id": "str006",
					      "text": "Select the text artifacts."
					    },
					    {
					      "id": "str007",
					      "text": "Click the button to print the title of the selected text artifacts."
					    },
					    {
					      "id": "str008",
					      "text": "Settings: "
					    },
					    {
					      "id": "str009",
					      "text": "This is a settings menu prototype. If you need a settings menu, you can use it. Otherwise, you should remove it."
					    },
					    {
					      "id": "str010",
					      "text": "Title(s):"
					    },
					    {
					      "id": "str011",
					      "text": "Print Text Artifacts Titles"
					    }
					  ],
					  "codeStrings":
					      {
					          "cs001": "Hide instructions",
					          "cs002": "Show instructions",
					          "cs003": "Hide settings",
					          "cs004": "Change settings"
					      }
					}`;
					
					lang = JSON.parse(lang_json);
					
					function loadLanguage()
					{
					    for (i = 0; i < lang.strings.length; i++) 
					    {
					        span = document.getElementById(lang.strings[i].id);
					        if(span != null)
					            span.textContent = lang.strings[i].text;
					    }
					}
					
					function getLangString(id)
					{
					    return lang.codeStrings[id];
					}
				</script>

	
				<!-- Importing bootstrap and jQuery -->
				<script src="js/jquery-3.6.1.js"></script>
				<link href="css/bootstrap.min.css" rel="stylesheet">
				<script src="js/bootstrap.bundle.min.js"></script>

				<!-- Custom JS-code -->
				<script type="text/javascript" src="./js/main.js">
				let selArt_ref = [];
				
				RM.Event.subscribe(RM.Event.ARTIFACT_SELECTED, onSelection); // Use the RM library to deal with DNG
				
				function onSelection(artifacts) 
				{
				    selArt_ref = artifacts;
				}
				
				function adjustHeight() //to recall each time we update the UI
				{
				    gadgets.window.adjustHeight();
				}
				
				function onBodyLoad() 
				{
				    const message = document.createElement('h1');
				    message.textContent = "Hello World";
				    document.body.appendChild(message);
				    
				    loadLanguage(); //load the text according to the language file set in main.xml
				
				    var ro = new ResizeObserver(entries => {
				        adjustHeight();
				    });
				
				    ro.observe(document.getElementById('button1')); //adjustHeight() is also called when the user changes the width of the main button (i.e., the width of the widget)
				    // adjustHeight(); //we update the height since we updated the UI with loadLanguage();
				
				}
				
				function show_instructions() //standard code for the show instruction button
				{
				    let instructions_div = document.getElementById('instructions_div');
				    let instructions_button = document.getElementById('instructions_button');
				
				    if (instructions_div.style.display == 'none') //if the instructions are hidden, show them
				    { 
				        instructions_div.style.display = "block";
				        instructions_button.innerHTML = getLangString('cs001');
				    }
				    else //if the instructions are visbile, hide them
				    {
				        instructions_div.style.display = "none";
				        instructions_button.innerHTML = getLangString('cs002');
				    }
				
				    // adjustHeight();
				}
				
				function show_settings() //standard code for the show settings button
				{
				    let settings_div = document.getElementById('settings_div');
				    let settings_button = document.getElementById('settings_button');
				
				    if (settings_div.style.display == 'none') //if the settings meno is hidden, show it
				    { 
				        settings_div.style.display = "block";
				        settings_button.innerHTML = getLangString('cs003');
				    }
				    else //if the settings menu is visbile, hide it
				    { 
				        settings_div.style.display = "none";
				        settings_button.innerHTML = getLangString('cs004');
				    }
				
				    // adjustHeight();
				}
				
				function mainButton_onclick() 
				{    
				    document.getElementById("str010").style.display = "block";
				    if (selArt_ref == undefined || selArt_ref.length == 0) //check if there are no selected artifacts
				    {
				        setContainerText("container", 'No text artifact selected.'); 
				        return;
				    }
				
				    RM.Data.getAttributes(selArt_ref, function(res) //We are also using RM here...
				    {
				        if (res.code === RM.OperationResult.OPERATION_OK && res.data.length > 0) //check if the request was executed successfully
				        {
				            title_array = []
				            for (let i = 0; i <res.data.length; i++)
				                if (res.data[i].values['http://www.ibm.com/xmlns/rdm/types/ArtifactFormat'] == 'Text') // do not consider non-text artificats
				                {
				                    let title = res.data[i].values["http://purl.org/dc/terms/title"]; //get artifact title (for more properties print res.data[i].values)
				                    
				                    if(title != null)
				                        title_array.push(title);
				                }
				
				            printArray(title_array);
				        }
				        else
				            setContainerText("container", 'No text artifact selected.');
				    });
				}
				
				function setContainerText(containerId, string)
				{
				    document.getElementById(containerId).innerHTML = string;
				    // adjustHeight();
				}
				
				function printArray(array)
				{
				    let containerHTML = '<ol>';
				    for (let i = 0; i < array.length; i++)
				        containerHTML += "<li>" + array[i] + "</li>";
				
				    setContainerText("container", containerHTML + "</ol>");
				}
				</script>

	
	
				<style>
					#container::-webkit-scrollbar {
  						-webkit-appearance: none;
  						width: 7px;
					}

					#container::-webkit-scrollbar-thumb {
  						border-radius: 4px;
  						background-color: rgba(0, 0, 0, .5);
  						-webkit-box-shadow: 0 0 1px rgba(255, 255, 255, .5);
					}
				</style>
			</head>
			<body onload='onBodyLoad();'>
				    <div class="d-grid gap-2 mx-2" style='margin-bottom: 3px;'> 
				    <table style='margin-top: 5px;'> 
				     <tr> 
				      <td style='text-align: center; font-size:12px;'>
				      <a onclick='show_instructions();' style='color:#00F; text-decoration: underline;' id='instructions_button'>
				      <span id='str001'></span></a></td> <td style='text-align: center; font-size:12px;'>
				      <a onclick='show_settings();' style='color:#00F; text-decoration: underline;' id='settings_button'>
				      <span id='str002'></span></a>
				      </td> 
				     </tr> 
				    </table>
				<h1>Hello, World</h1>
				<table> 
				     <tr> 
				      <td style='text-align: center; font-size:12px;'>
					Jeba Jee
				      </td> 
				     </tr> 
				</table>
				<div class="d-grid gap-2 mx-2" style='margin-bottom: 3px;'>
				
					<table style='margin-top: 5px;'>
						<tr>
							<td style='text-align: center; font-size:12px;'><a onclick='show_instructions();' style='color:#00F; text-decoration: underline;' id='instructions_button'><span id='str001'></span></a></td>
							<td style='text-align: center; font-size:12px;'><a onclick='show_settings();' style='color:#00F; text-decoration: underline;' id='settings_button'><span id='str002'></span></a></td>
						</tr>
					</table>

					<hr style='padding: 0 !important; margin: 0 !important;'/>

					<div style="font-size:12px; display: none;" id='instructions_div'>
						<b><span id='str003'></span> </b> <span id='str004'></span> <br/>
						<ol>
							<li> <span id='str005'></span> </li>
							<li> <span id='str006'></span> </li>
							<li> <span id='str007'></span></li>
						</ol>

						<hr style='padding: 0 !important; margin: 0 !important;'/>
					</div>
					
					<div style="font-size:12px; display: none;" id='settings_div'>
						<b> <span id='str008'></span> </b> <span id='str009'>  </span>
						<hr style='padding: 0 !important; margin: 0 !important;'/>
					</div>

					<div style="font-size:12px;">
						<b><span id='str010' hidden></span></b>
						<div style="overflow-y: scroll; max-height:80px; background-color:#EEE;" id='container'></div>
					</div>

					<button type="button" style="font-size:12px;" class="btn btn-danger" onclick="mainButton_onclick();" id="button1">Rewrite as User Story<span id='str011'></span></button>
				</div>
			</body>
		</html>
	]]>
</Content>
</Module>
